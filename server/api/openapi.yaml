openapi: 3.0.0
info:
  description: getting started
  termsOfService: under contruction
  title: Swagger Getting Started
  version: 1.0.0
servers:
- url: http://localhost:8081
security:
- ApiKeyAuth: []
paths:
  /users:
    get:
      description: Returns all users.
      operationId: listUsers
      parameters:
      - description: active flag to filter by
        explode: true
        in: query
        name: active
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: API Key is missing or invalid
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
    post:
      description: Create a new user in the user management service.
      operationId: addUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
        description: User to add to the system
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: user response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: API Key is missing or invalid
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
  /users/${id}:
    delete:
      description: Delete a user specified with the id in path
      operationId: deleteUser
      parameters:
      - description: ID of user to fetch
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: delete user response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: API Key is missing or invalid
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
    get:
      description: Returns a user specified with the id in path
      operationId: getUser
      parameters:
      - description: ID of user to fetch
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: user response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: API Key is missing or invalid
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
    put:
      description: Update a user specified with the id in path
      operationId: updateUser
      parameters:
      - description: ID of user to fetch
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User to add to the system
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: update user response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: API Key is missing or invalid
          headers:
            WWW_Authenticate:
              explode: false
              schema:
                type: string
              style: simple
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
components:
  responses:
    UnauthorizedError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: API Key is missing or invalid
      headers:
        WWW_Authenticate:
          explode: false
          schema:
            type: string
          style: simple
    UnexpectedError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: unexpected error
  schemas:
    User:
      allOf:
      - $ref: '#/components/schemas/NewUser'
      - $ref: '#/components/schemas/User_allOf'
    NewUser:
      example:
        name: name
        active: true
        id: 0
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        active:
          type: boolean
      required:
      - name
      type: object
    Error:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
      required:
      - code
      - message
      type: object
    User_allOf:
      properties:
        id:
          format: int64
          type: integer
      required:
      - id
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-API-KEY
      type: apiKey
